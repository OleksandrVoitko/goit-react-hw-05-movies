{"version":3,"file":"static/js/107.9384b5f4.chunk.js","mappings":"4TAAaA,EAAU,mCCGvBC,IAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAgB,mCAAG,6GAELD,IAAAA,IAAA,qCAAwCD,IAFnC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,gCAK5BC,QAAQC,MAAR,MAL4B,yDAAH,qDAShBC,EAAe,mCAAG,WAAOC,GAAP,gGAEJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IAFlC,cAErBG,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,QAAQC,MAAR,MAL2B,yDAAH,sDASfG,EAAY,mCAAG,WAAOD,GAAP,gGAEDR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,IAHf,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKO,MALG,gCAOxBL,QAAQC,MAAR,MAPwB,yDAAH,sDAWZK,EAAe,mCAAG,WAAOH,GAAP,gGAEJR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,IAHX,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,QAAQC,MAAR,MAP2B,yDAAH,sDAWfM,EAAgB,mCAAG,WAAOC,GAAP,gGAELb,IAAAA,IAAA,6BACCa,EADD,oBACkBd,IAHb,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,yDAOrBU,QAAQC,OAAO,IAAIC,MAAM,KAAMC,WAPV,yDAAH,uD,yKC1ChBC,EAAOC,EAAAA,GAAAA,KAAH,+FAMJC,EAAQD,EAAAA,GAAAA,MAAH,0IAOLE,EAASF,EAAAA,GAAAA,OAAH,+VAiBNG,EAAeH,EAAAA,GAAAA,IAAH,mEAKZI,EAASJ,EAAAA,GAAAA,GAAH,gOAUNK,EAAaL,EAAAA,GAAAA,GAAH,8SAaVM,GAAWN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAH,kDAIRQ,EAAUR,EAAAA,GAAAA,IAAH,uGAOPS,EAAcT,EAAAA,GAAAA,IAAH,oJAQXU,EAAcV,EAAAA,GAAAA,GAAH,+MAWXW,EAAeX,EAAAA,GAAAA,KAAH,gK,SCzEV,SAASY,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,SAChCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACJJ,IACF1B,EAAAA,EAAAA,IAAiB0B,GAAcK,KAAKT,KAErC,CAACI,IAaJ,OACE,iCACE,UAACpB,EAAD,CAAM0B,SAbW,SAACC,GACpBA,EAAMC,iBACN,IAAMjC,EAAQgC,EAAME,cAAcC,SAASC,WAAWC,MAEjC,KAAjBrC,EAAMsC,QAIVd,EAAgB,CAAExB,MAAOA,KAKvB,WACE,SAACO,EAAD,CACEgC,KAAK,OACLC,KAAK,aACLC,aAAa,MACbC,WAAS,EACTC,YAAY,uBAEd,SAACnC,EAAD,CAAQ+B,KAAK,SAAb,uBAEDnB,IACC,UAACX,EAAD,WACGW,EAAOwB,OAAS,IACf,SAAClC,EAAD,UACGU,EAAOyB,KAAI,SAACC,GAAD,OACV,SAACnC,EAAD,WACE,UAACC,EAAD,CAAUmC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMvB,GAA5C,WACE,0BACE,SAACb,EAAD,CACEqC,IACEL,EAAMM,YAAN,0CACuCN,EAAMM,aACzCC,EAENC,IAAKR,EAAMS,WAGf,UAACxC,EAAD,YACE,SAACC,EAAD,UAAc8B,EAAMS,SACpB,SAACtC,EAAD,UAAe6B,EAAMU,sBAdVV,EAAME,SAqBV,IAAlB5B,EAAOwB,SAAgB,qD","sources":["api/constants.js","api/apiServices.js","pages/MoviesPage/MoviePage.styled.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"./constants\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSearchedMovie = async (query) => {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const Form = styled.form`\n  display: flex;\n  justify-content: center;\n  padding-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  padding: 10px;\n  margin-right: 10px;\n  font-size: 18px;\n  border-radius: 4px;\n  border: 2px solid #2a363b;\n`;\nexport const Button = styled.button`\n  text-decoration: none;\n  text-transform: uppercase;\n  border: 2px solid #ff6b08;\n  background-color: #ff6b08;\n  padding: 8px;\n  border-radius: 5px;\n  color: #fff;\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n  :hover {\n    background-color: #fff;\n    color: #ff6b08;\n    transition: all 1s linear 0s;\n  }\n`;\nexport const ContainerDiv = styled.div`\n  padding: 0px 30px;\n  margin: 0px auto;\n`;\n\nexport const ListUl = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  gap: 30px;\n  margin: 0px auto;\n  padding: 15px 20px 0px;\n  list-style: none;\n`;\n\nexport const ListItemLi = styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 8px;\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  :hover {\n    cursor: pointer;\n    transform: scale(1.03) translateY(-3px);\n    box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemImg = styled.img`\n  width: 100%;\n  height: 355px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const ItemInfoDiv = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n\nexport const ItemTitleH2 = styled.h2`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  text-transform: uppercase;\n  color: #2a363b;\n  text-decoration: none;\n  margin-left: 10px;\n`;\n\nexport const ItemRateSpan = styled.span`\n  padding: 0 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  background-color: #ff6b08;\n  color: #fff;\n  border-radius: 5px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { useSearchParams, useLocation } from \"react-router-dom\";\nimport { getSearchedMovie } from \"../../api/apiServices\";\nimport noPoster from \"../../images/noposter.jpg\";\nimport {\n  Form,\n  Input,\n  Button,\n  ContainerDiv,\n  ListUl,\n  ListItemLi,\n  ItemLink,\n  ItemImg,\n  ItemInfoDiv,\n  ItemTitleH2,\n  ItemRateSpan,\n} from \"./MoviePage.styled\";\n\nexport default function MoviesView() {\n  const [movies, setMovies] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentQuery = searchParams.get(\"query\");\n  const location = useLocation();\n\n  useEffect(() => {\n    if (currentQuery) {\n      getSearchedMovie(currentQuery).then(setMovies);\n    }\n  }, [currentQuery]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const query = event.currentTarget.elements.inputValue.value;\n\n    if (query.trim() === \"\") {\n      return;\n    }\n\n    setSearchParams({ query: query });\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          name=\"inputValue\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Searched movie...\"\n        />\n        <Button type=\"submit\">Search</Button>\n      </Form>\n      {movies && (\n        <ContainerDiv>\n          {movies.length > 0 && (\n            <ListUl>\n              {movies.map((movie) => (\n                <ListItemLi key={movie.id}>\n                  <ItemLink to={`${movie.id}`} state={{ from: location }}>\n                    <div>\n                      <ItemImg\n                        src={\n                          movie.poster_path\n                            ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                            : noPoster\n                        }\n                        alt={movie.title}\n                      />\n                    </div>\n                    <ItemInfoDiv>\n                      <ItemTitleH2>{movie.title}</ItemTitleH2>\n                      <ItemRateSpan>{movie.vote_average}</ItemRateSpan>\n                    </ItemInfoDiv>\n                  </ItemLink>\n                </ListItemLi>\n              ))}\n            </ListUl>\n          )}\n          {movies.length === 0 && <p>Nothing was found</p>}\n        </ContainerDiv>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovie","response","data","results","console","error","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchedMovie","query","Promise","reject","Error","message","Form","styled","Input","Button","ContainerDiv","ListUl","ListItemLi","ItemLink","Link","ItemImg","ItemInfoDiv","ItemTitleH2","ItemRateSpan","MoviesView","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","currentQuery","get","location","useLocation","useEffect","then","onSubmit","event","preventDefault","currentTarget","elements","inputValue","value","trim","type","name","autoComplete","autoFocus","placeholder","length","map","movie","to","id","state","from","src","poster_path","noPoster","alt","title","vote_average"],"sourceRoot":""}