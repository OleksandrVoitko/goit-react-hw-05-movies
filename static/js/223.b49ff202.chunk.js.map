{"version":3,"file":"static/js/223.b49ff202.chunk.js","mappings":"4TAAaA,EAAU,mCCGvBC,IAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAgB,mCAAG,6GAELD,IAAAA,IAAA,qCAAwCD,IAFnC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,gCAK5BC,QAAQC,MAAR,MAL4B,yDAAH,qDAShBC,EAAe,mCAAG,WAAOC,GAAP,gGAEJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IAFlC,cAErBG,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,QAAQC,MAAR,MAL2B,yDAAH,sDASfG,EAAY,mCAAG,WAAOD,GAAP,gGAEDR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,IAHf,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKO,MALG,gCAOxBL,QAAQC,MAAR,MAPwB,yDAAH,sDAWZK,EAAe,mCAAG,WAAOH,GAAP,gGAEJR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,IAHX,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,QAAQC,MAAR,MAP2B,yDAAH,sDAWfM,EAAgB,mCAAG,WAAOC,GAAP,gGAELb,IAAAA,IAAA,6BACCa,EADD,oBACkBd,IAHb,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,yDAOrBU,QAAQC,OAAO,IAAIC,MAAM,KAAMC,WAPV,yDAAH,uD,+IC1ChBC,EAAeC,EAAAA,GAAAA,IAAH,mEAKZC,EAASD,EAAAA,GAAAA,GAAH,gOAUNE,EAAYF,EAAAA,GAAAA,GAAF,8SAaVG,GAAWH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAH,kDAIRK,EAAUL,EAAAA,GAAAA,IAAH,uGAOPM,EAAcN,EAAAA,GAAAA,IAAH,oJAQXO,EAAcP,EAAAA,GAAAA,GAAH,+MAWXQ,EAAeR,EAAAA,GAAAA,KAAH,gK,mBC9CV,SAASS,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACR/B,EAAAA,EAAAA,MAAmBgC,KAAKF,KACvB,KAGD,SAACb,EAAD,WACE,SAACE,EAAD,UACGU,GACCA,EAAOI,KAAI,SAACC,GAAD,OACT,SAACd,EAAD,WACE,UAACC,EAAD,CAAUc,GAAE,iBAAYD,EAAME,IAA9B,WACE,0BACE,SAACb,EAAD,CACEc,IACEH,EAAMI,YAAN,0CACuCJ,EAAMI,aACzCC,EAENC,IAAKN,EAAMO,WAGf,UAACjB,EAAD,YACE,SAACC,EAAD,UAAcS,EAAMO,SACpB,SAACf,EAAD,UAAeQ,EAAMQ,sBAdVR,EAAME,a","sources":["api/constants.js","api/apiServices.js","pages/HomePage/HomePage.styled.jsx","pages/HomePage/HomePage.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"./constants\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSearchedMovie = async (query) => {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n};\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const ContainerDiv = styled.div`\n  padding: 0px 30px;\n  margin: 0px auto;\n`;\n\nexport const ListUl = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 30px);\n  grid-template-columns: repeat(auto-fill, minmax(230px, 1fr));\n  gap: 30px;\n  margin: 0px auto;\n  padding: 15px 20px 0px;\n  list-style: none;\n`;\n\nexport const ListItemLi= styled.li`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border-radius: 8px;\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  :hover {\n    cursor: pointer;\n    transform: scale(1.03) translateY(-3px);\n    box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  }\n`;\n\nexport const ItemLink = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const ItemImg = styled.img`\n  width: 100%;\n  height: 355px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\n\nexport const ItemInfoDiv = styled.div`\n  display: flex;\n  align-items: baseline;\n  justify-content: space-between;\n  padding-left: 5px;\n  padding-right: 5px;\n`;\n\nexport const ItemTitleH2 = styled.h2`\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n  text-transform: uppercase;\n  color: #2a363b;\n  text-decoration: none;\n  margin-left: 10px;\n`;\n\nexport const ItemRateSpan = styled.span`\n  padding: 0 10px;\n  margin-left: 10px;\n  margin-right: 10px;\n\n  background-color: #ff6b08;\n  color: #fff;\n  border-radius: 5px;\n`;\n","import { useEffect, useState } from \"react\";\nimport { getTrendingMovie } from \"../../api/apiServices\";\n\nimport {\n  ContainerDiv,\n  ListUl,\n  ListItemLi,\n  ItemLink,\n  ItemImg,\n  ItemInfoDiv,\n  ItemTitleH2,\n  ItemRateSpan,\n} from \"./HomePage.styled\";\nimport noPoster from \"../../images/noposter.jpg\";\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getTrendingMovie().then(setMovies);\n  }, []);\n\n  return (\n    <ContainerDiv>\n      <ListUl>\n        {movies &&\n          movies.map((movie) => (\n            <ListItemLi key={movie.id}>\n              <ItemLink to={`movies/${movie.id}`}>\n                <div>\n                  <ItemImg\n                    src={\n                      movie.poster_path\n                        ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                        : noPoster\n                    }\n                    alt={movie.title}\n                  />\n                </div>\n                <ItemInfoDiv>\n                  <ItemTitleH2>{movie.title}</ItemTitleH2>\n                  <ItemRateSpan>{movie.vote_average}</ItemRateSpan>\n                </ItemInfoDiv>\n              </ItemLink>\n            </ListItemLi>\n          ))}\n      </ListUl>\n    </ContainerDiv>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovie","response","data","results","console","error","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchedMovie","query","Promise","reject","Error","message","ContainerDiv","styled","ListUl","ListItemLi","ItemLink","Link","ItemImg","ItemInfoDiv","ItemTitleH2","ItemRateSpan","HomeView","useState","movies","setMovies","useEffect","then","map","movie","to","id","src","poster_path","noPoster","alt","title","vote_average"],"sourceRoot":""}