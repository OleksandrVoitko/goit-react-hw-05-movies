{"version":3,"file":"static/js/891.466977e3.chunk.js","mappings":"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","sources":["api/constants.js","api/apiServices.js","pages/MovieDetailsPage/MovieDetailsPage.styled.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"./constants\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSearchedMovie = async (query) => {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n};\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const WrapperDiv = styled.div`\n  max-width: 1000px;\n  border-radius: 8px;\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  margin: 0 auto 20px;\n  padding: 20px;\n  color: #2a363b;\n`;\n\nexport const WrapperImgDiv = styled.div`\n  display: flex;\n`;\n\nexport const WrapperInfoDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin-left: 25px;\n  font-size: 18px;\n`;\n\nexport const FirstTitleH1 = styled.h1`\n  margin: 0;\n`;\n\nexport const RateSpan = styled.span`\n  padding: 0 10px;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  margin-left: 10px;\n\n  background-color: #ff6b08;\n  color: #fff;\n  border-radius: 5px;\n`;\nexport const SecondTitleH2 = styled.h2`\n  margin: 0;\n`;\nexport const ThirdTitleH3 = styled.h3`\n  margin: 0;\n`;\n\nexport const ButtonsDiv = styled.div`\n  padding-top: 20px;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n  justify-content: space-between;\n`;\n\nexport const MovieInfoDiv = styled.div`\n  display: flex;\n  justify-content: flex-end;\n`;\n\nexport const ButtonNavLink = styled(NavLink)`\n  text-decoration: none;\n  text-transform: uppercase;\n  border: 2px solid #ff6b08;\n  background-color: #ff6b08;\n  padding: 8px;\n  border-radius: 5px;\n  color: #fff;\n  :not(:last-child) {\n    margin-right: 30px;\n  }\n  :hover {\n    background-color: #fff;\n    color: #ff6b08;\n    transition: all 1s linear 0s;\n  }\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { getMovieDetails } from \"../../api/apiServices\";\n\nimport {\n  WrapperDiv,\n  WrapperImgDiv,\n  WrapperInfoDiv,\n  FirstTitleH1,\n  RateSpan,\n  SecondTitleH2,\n  ThirdTitleH3,\n  ButtonsDiv,\n  ButtonNavLink,\n  MovieInfoDiv,\n} from \"./MovieDetailsPage.styled\";\n\nexport default function MovieDetailsPage() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  let location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(setMovie);\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && (\n        <WrapperDiv>\n          <WrapperImgDiv>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n              alt={movieId}\n            />\n            <WrapperInfoDiv>\n              <FirstTitleH1>\n                {movie.original_title} ({movie.release_date.slice(0, 4)})\n              </FirstTitleH1>\n              <p>\n                User Score: <RateSpan>{movie.vote_average}</RateSpan>{\" \"}\n              </p>\n              <SecondTitleH2>Overview</SecondTitleH2>\n              <p>{movie.overview}</p>\n              <ThirdTitleH3>\n                {movie.genres.map((genre) => genre.name + \" \")}\n              </ThirdTitleH3>\n            </WrapperInfoDiv>\n          </WrapperImgDiv>\n          <ButtonsDiv>\n            <ButtonNavLink to={location?.state?.from ?? \"/\"}>\n              Go back\n            </ButtonNavLink>\n            <MovieInfoDiv>\n              <ButtonNavLink\n                to=\"reviews\"\n                state={{ from: location?.state?.from ?? \"/\" }}\n              >\n                Reviews\n              </ButtonNavLink>\n              <ButtonNavLink\n                to=\"cast\"\n                state={{ from: location?.state?.from ?? \"/\" }}\n              >\n                Cast\n              </ButtonNavLink>\n            </MovieInfoDiv>\n          </ButtonsDiv>\n\n          <Outlet />\n        </WrapperDiv>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovie","response","data","results","console","error","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchedMovie","query","Promise","reject","Error","message","WrapperDiv","styled","WrapperImgDiv","WrapperInfoDiv","FirstTitleH1","RateSpan","SecondTitleH2","ThirdTitleH3","ButtonsDiv","MovieInfoDiv","ButtonNavLink","NavLink","MovieDetailsPage","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","src","poster_path","alt","original_title","release_date","slice","vote_average","overview","genres","map","genre","name","to","state","from"],"sourceRoot":""}