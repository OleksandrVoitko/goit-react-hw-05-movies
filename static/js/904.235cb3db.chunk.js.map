{"version":3,"file":"static/js/904.235cb3db.chunk.js","mappings":"4TAAaA,EAAU,mCCGvBC,IAAAA,SAAAA,QDFwB,+BCIjB,IAAMC,EAAgB,mCAAG,6GAELD,IAAAA,IAAA,qCAAwCD,IAFnC,cAEtBG,EAFsB,yBAGrBA,EAASC,KAAKC,SAHO,gCAK5BC,QAAQC,MAAR,MAL4B,yDAAH,qDAShBC,EAAe,mCAAG,WAAOC,GAAP,gGAEJR,IAAAA,IAAA,gBAAmBQ,EAAnB,oBAAsCT,IAFlC,cAErBG,EAFqB,yBAGpBA,EAASC,MAHW,gCAK3BE,QAAQC,MAAR,MAL2B,yDAAH,sDASfG,EAAY,mCAAG,WAAOD,GAAP,gGAEDR,IAAAA,IAAA,iBACXQ,EADW,4BACgBT,IAHf,cAElBG,EAFkB,yBAKjBA,EAASC,KAAKO,MALG,gCAOxBL,QAAQC,MAAR,MAPwB,yDAAH,sDAWZK,EAAe,mCAAG,WAAOH,GAAP,gGAEJR,IAAAA,IAAA,gBACZQ,EADY,4BACeT,IAHX,cAErBG,EAFqB,yBAKpBA,EAASC,MALW,gCAO3BE,QAAQC,MAAR,MAP2B,yDAAH,sDAWfM,EAAgB,mCAAG,WAAOC,GAAP,gGAELb,IAAAA,IAAA,6BACCa,EADD,oBACkBd,IAHb,cAEtBG,EAFsB,yBAKrBA,EAASC,KAAKC,SALO,yDAOrBU,QAAQC,OAAO,IAAIC,MAAM,KAAMC,WAPV,yDAAH,uD,kJC3ChBC,EAASC,EAAAA,GAAAA,GAAH,4PAUNC,EAAaD,EAAAA,GAAAA,GAAH,yKAQVE,EAAUF,EAAAA,GAAAA,IAAH,uGAMPG,EAAYH,EAAAA,GAAAA,EAAH,6C,SCpBP,SAASI,IACtB,IAAQf,GAAYgB,EAAAA,EAAAA,MAAZhB,QACR,GAAwBiB,EAAAA,EAAAA,UAAS,MAAjC,eAAOf,EAAP,KAAagB,EAAb,KAOA,OAJAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAaD,GAASoB,KAAKF,KAC1B,CAAClB,KAGF,8BACGE,IACC,SAACQ,EAAD,UACGR,EAAKmB,KAAI,SAACC,GAAD,OACR,UAACV,EAAD,YACE,SAACC,EAAD,CACEU,IACED,EAAME,aAAN,UAdI,mCAcJ,OACqBF,EAAME,cACvBC,EAENC,IAAKJ,EAAMK,KACXC,MAAM,SAER,SAACd,EAAD,UAAYQ,EAAMK,QAClB,uCAAeL,EAAMO,eAXNP,EAAMQ,a","sources":["api/constants.js","api/apiServices.js","pages/Cast/Cast.styled.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["export const API_KEY = \"9d3b2d59c7632f197e52385ff97229b9\";\nexport const BASE_URL = \"https://api.themoviedb.org/3\";\n","import axios from \"axios\";\nimport { API_KEY, BASE_URL } from \"./constants\";\n\naxios.defaults.baseURL = BASE_URL;\n\nexport const getTrendingMovie = async () => {\n  try {\n    const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n    return response.data.results;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieDetails = async (movieId) => {\n  try {\n    const response = await axios.get(`movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieCast = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getMovieReviews = async (movieId) => {\n  try {\n    const response = await axios.get(\n      `movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n    return response.data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const getSearchedMovie = async (query) => {\n  try {\n    const response = await axios.get(\n      `search/movie?query=${query}&api_key=${API_KEY}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return Promise.reject(new Error(error.message));\n  }\n};\n","import styled from \"styled-components\";\n\nexport const ListUl = styled.ul`\n  list-style: none;\n  display: grid;\n  place-items: center;\n  padding-left: 30px;\n  padding-right: 30px;\n  grid-template-rows: repeat(1, 1fr);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  gap: 30px;\n`;\nexport const ListItemLi = styled.li`\n  width: 160px;\n  height: 100%;\n  text-align: center;\n  border-radius: 8px;\n  box-shadow: 0 5px 10px rgb(0 0 0 / 50%);\n  overflow: hidden;\n`;\nexport const ItemImg = styled.img`\n  width: 100%;\n  height: 250px;\n  border-radius: 5px;\n  object-fit: cover;\n`;\nexport const ItemNameP = styled.p`\n  font-weight: 700;\n`;\n","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { getMovieCast } from \"../../api/apiServices\";\nimport noPoster from \"../../images/noposter.jpg\";\nimport { ListUl, ListItemLi, ItemImg, ItemNameP } from \"./Cast.styled\";\n\nexport default function Cast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n  const urlActorImg = \"https://image.tmdb.org/t/p/w300\";\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  return (\n    <>\n      {cast && (\n        <ListUl>\n          {cast.map((actor) => (\n            <ListItemLi key={actor.id}>\n              <ItemImg\n                src={\n                  actor.profile_path\n                    ? `${urlActorImg}${actor.profile_path}`\n                    : noPoster\n                }\n                alt={actor.name}\n                width=\"100\"\n              />\n              <ItemNameP>{actor.name}</ItemNameP>\n              <p>Character: {actor.character}</p>\n            </ListItemLi>\n          ))}\n        </ListUl>\n      )}\n    </>\n  );\n}\n"],"names":["API_KEY","axios","getTrendingMovie","response","data","results","console","error","getMovieDetails","movieId","getMovieCast","cast","getMovieReviews","getSearchedMovie","query","Promise","reject","Error","message","ListUl","styled","ListItemLi","ItemImg","ItemNameP","Cast","useParams","useState","setCast","useEffect","then","map","actor","src","profile_path","noPoster","alt","name","width","character","id"],"sourceRoot":""}